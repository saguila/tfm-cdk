"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatasetManager = void 0;
const cdk = require("@aws-cdk/core");
/**
 * Gestion de los permisos del data lake sobre las tablas
 */
class DatasetManager extends cdk.Stack {
    constructor(scope, id, props) {
        super(scope, id, props);
        /*Array with dataset configuration */
        this.Enrollments = [];
        this.DataLake = props.dataLake;
    }
    grantDatabasePermissions(principal, permissionGrant) {
        for (let enrollment of this.Enrollments) {
            enrollment.grantDatabasePermission(principal, permissionGrant);
        }
    }
    grantTablePermissions(principal, permissionGrant) {
        this.DataLake.grantAthenaResultsBucketPermission(principal);
        for (let enrollment of this.Enrollments) {
            enrollment.grantTablePermissions(principal, permissionGrant);
        }
    }
    grantTableWithColumnPermissions(principal, permissionGrant) {
        this.DataLake.grantAthenaResultsBucketPermission(principal);
        for (let enrollment of this.Enrollments) {
            enrollment.grantTableWithColumnPermissions(principal, permissionGrant);
        }
    }
    grantIamRead(principal) {
        this.DataLake.grantAthenaResultsBucketPermission(principal);
        for (let enrollment of this.Enrollments) {
            enrollment.grantCoarseIamRead(principal);
        }
    }
}
exports.DatasetManager = DatasetManager;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXNldC1tYW5hZ2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiZGF0YXNldC1tYW5hZ2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHFDQUFxQztBQVNyQzs7R0FFRztBQUNILE1BQWEsY0FBZSxTQUFRLEdBQUcsQ0FBQyxLQUFLO0lBT3pDLFlBQVksS0FBb0IsRUFBRSxFQUFVLEVBQUUsS0FBMEI7UUFDcEUsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFONUIscUNBQXFDO1FBQzlCLGdCQUFXLEdBQW9DLEVBQUUsQ0FBQztRQU1yRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxRQUFRLENBQUM7SUFDbkMsQ0FBQztJQUVNLHdCQUF3QixDQUFFLFNBQXlCLEVBQUUsZUFBaUU7UUFDekgsS0FBSSxJQUFJLFVBQVUsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFDO1lBQ25DLFVBQVUsQ0FBQyx1QkFBdUIsQ0FBQyxTQUFTLEVBQUUsZUFBZSxDQUFDLENBQUM7U0FDbEU7SUFDTCxDQUFDO0lBRU0scUJBQXFCLENBQUMsU0FBeUIsRUFBRSxlQUE4RDtRQUVsSCxJQUFJLENBQUMsUUFBUSxDQUFDLGtDQUFrQyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRTVELEtBQUksSUFBSSxVQUFVLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBQztZQUNuQyxVQUFVLENBQUMscUJBQXFCLENBQUMsU0FBUyxFQUFFLGVBQWUsQ0FBQyxDQUFDO1NBQ2hFO0lBQ0wsQ0FBQztJQUVNLCtCQUErQixDQUFDLFNBQXlCLEVBQUUsZUFBd0U7UUFFdEksSUFBSSxDQUFDLFFBQVEsQ0FBQyxrQ0FBa0MsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUU1RCxLQUFJLElBQUksVUFBVSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUM7WUFDbkMsVUFBVSxDQUFDLCtCQUErQixDQUFDLFNBQVMsRUFBRSxlQUFlLENBQUMsQ0FBQztTQUMxRTtJQUNMLENBQUM7SUFFTSxZQUFZLENBQUMsU0FBeUI7UUFDekMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxrQ0FBa0MsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM1RCxLQUFJLElBQUksVUFBVSxJQUFJLElBQUksQ0FBQyxXQUFXLEVBQUM7WUFDbkMsVUFBVSxDQUFDLGtCQUFrQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1NBQzVDO0lBQ0wsQ0FBQztDQUNKO0FBMUNELHdDQTBDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNkayBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCBpYW0gPSByZXF1aXJlKCdAYXdzLWNkay9hd3MtaWFtJyk7XG5pbXBvcnQgeyBEYXRhTGFrZUNvbmZSZWdpc3RyYXRpb24gfSBmcm9tICcuL2J1aWxkZXJzL2RhdGEtbGFrZS1jb25mLXJlZ2lzdHJhdGlvbic7XG5pbXBvcnQgeyBMYWtlRm9ybWF0aW9uU3RhY2sgfSBmcm9tICcuLi9sYWtlLWZvcm1hdGlvbi1zdGFjayc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YXNldE1hbmFnZXJQcm9wcyBleHRlbmRzIGNkay5TdGFja1Byb3BzIHtcbiAgICBkYXRhTGFrZTogTGFrZUZvcm1hdGlvblN0YWNrO1xufVxuXG4vKipcbiAqIEdlc3Rpb24gZGUgbG9zIHBlcm1pc29zIGRlbCBkYXRhIGxha2Ugc29icmUgbGFzIHRhYmxhc1xuICovXG5leHBvcnQgY2xhc3MgRGF0YXNldE1hbmFnZXIgZXh0ZW5kcyBjZGsuU3RhY2sge1xuXG4gICAgLypBcnJheSB3aXRoIGRhdGFzZXQgY29uZmlndXJhdGlvbiAqL1xuICAgIHB1YmxpYyBFbnJvbGxtZW50czogQXJyYXk8RGF0YUxha2VDb25mUmVnaXN0cmF0aW9uPiA9IFtdO1xuICAgIC8qIERhdGEgTGFrZSAqL1xuICAgIHB1YmxpYyBEYXRhTGFrZTogTGFrZUZvcm1hdGlvblN0YWNrO1xuXG4gICAgY29uc3RydWN0b3Ioc2NvcGU6IGNkay5Db25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBEYXRhc2V0TWFuYWdlclByb3BzKSB7XG4gICAgICAgIHN1cGVyKHNjb3BlLCBpZCwgcHJvcHMpO1xuICAgICAgICB0aGlzLkRhdGFMYWtlID0gcHJvcHMuZGF0YUxha2U7XG4gICAgfVxuXG4gICAgcHVibGljIGdyYW50RGF0YWJhc2VQZXJtaXNzaW9ucyggcHJpbmNpcGFsOiBpYW0uSVByaW5jaXBhbCwgcGVybWlzc2lvbkdyYW50OiBEYXRhTGFrZUNvbmZSZWdpc3RyYXRpb24uRGF0YWJhc2VQZXJtaXNzaW9uR3JhbnQpe1xuICAgICAgICBmb3IobGV0IGVucm9sbG1lbnQgb2YgdGhpcy5FbnJvbGxtZW50cyl7XG4gICAgICAgICAgICBlbnJvbGxtZW50LmdyYW50RGF0YWJhc2VQZXJtaXNzaW9uKHByaW5jaXBhbCwgcGVybWlzc2lvbkdyYW50KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBncmFudFRhYmxlUGVybWlzc2lvbnMocHJpbmNpcGFsOiBpYW0uSVByaW5jaXBhbCwgcGVybWlzc2lvbkdyYW50OiBEYXRhTGFrZUNvbmZSZWdpc3RyYXRpb24uVGFibGVQZXJtaXNzaW9uR3JhbnQpe1xuXG4gICAgICAgIHRoaXMuRGF0YUxha2UuZ3JhbnRBdGhlbmFSZXN1bHRzQnVja2V0UGVybWlzc2lvbihwcmluY2lwYWwpO1xuXG4gICAgICAgIGZvcihsZXQgZW5yb2xsbWVudCBvZiB0aGlzLkVucm9sbG1lbnRzKXtcbiAgICAgICAgICAgIGVucm9sbG1lbnQuZ3JhbnRUYWJsZVBlcm1pc3Npb25zKHByaW5jaXBhbCwgcGVybWlzc2lvbkdyYW50KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBncmFudFRhYmxlV2l0aENvbHVtblBlcm1pc3Npb25zKHByaW5jaXBhbDogaWFtLklQcmluY2lwYWwsIHBlcm1pc3Npb25HcmFudDogRGF0YUxha2VDb25mUmVnaXN0cmF0aW9uLlRhYmxlV2l0aENvbHVtblBlcm1pc3Npb25HcmFudCl7XG5cbiAgICAgICAgdGhpcy5EYXRhTGFrZS5ncmFudEF0aGVuYVJlc3VsdHNCdWNrZXRQZXJtaXNzaW9uKHByaW5jaXBhbCk7XG5cbiAgICAgICAgZm9yKGxldCBlbnJvbGxtZW50IG9mIHRoaXMuRW5yb2xsbWVudHMpe1xuICAgICAgICAgICAgZW5yb2xsbWVudC5ncmFudFRhYmxlV2l0aENvbHVtblBlcm1pc3Npb25zKHByaW5jaXBhbCwgcGVybWlzc2lvbkdyYW50KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBncmFudElhbVJlYWQocHJpbmNpcGFsOiBpYW0uSVByaW5jaXBhbCl7XG4gICAgICAgIHRoaXMuRGF0YUxha2UuZ3JhbnRBdGhlbmFSZXN1bHRzQnVja2V0UGVybWlzc2lvbihwcmluY2lwYWwpO1xuICAgICAgICBmb3IobGV0IGVucm9sbG1lbnQgb2YgdGhpcy5FbnJvbGxtZW50cyl7XG4gICAgICAgICAgICBlbnJvbGxtZW50LmdyYW50Q29hcnNlSWFtUmVhZChwcmluY2lwYWwpO1xuICAgICAgICB9XG4gICAgfVxufSJdfQ==